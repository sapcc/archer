// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// NewPutQuotasProjectIDParams creates a new PutQuotasProjectIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutQuotasProjectIDParams() *PutQuotasProjectIDParams {
	return &PutQuotasProjectIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutQuotasProjectIDParamsWithTimeout creates a new PutQuotasProjectIDParams object
// with the ability to set a timeout on a request.
func NewPutQuotasProjectIDParamsWithTimeout(timeout time.Duration) *PutQuotasProjectIDParams {
	return &PutQuotasProjectIDParams{
		timeout: timeout,
	}
}

// NewPutQuotasProjectIDParamsWithContext creates a new PutQuotasProjectIDParams object
// with the ability to set a context for a request.
func NewPutQuotasProjectIDParamsWithContext(ctx context.Context) *PutQuotasProjectIDParams {
	return &PutQuotasProjectIDParams{
		Context: ctx,
	}
}

// NewPutQuotasProjectIDParamsWithHTTPClient creates a new PutQuotasProjectIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutQuotasProjectIDParamsWithHTTPClient(client *http.Client) *PutQuotasProjectIDParams {
	return &PutQuotasProjectIDParams{
		HTTPClient: client,
	}
}

/*
PutQuotasProjectIDParams contains all the parameters to send to the API endpoint

	for the put quotas project ID operation.

	Typically these are written to a http.Request.
*/
type PutQuotasProjectIDParams struct {

	// Body.
	Body *models.Quota

	/* ProjectID.

	   The ID of the project to query.
	*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put quotas project ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutQuotasProjectIDParams) WithDefaults() *PutQuotasProjectIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put quotas project ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutQuotasProjectIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put quotas project ID params
func (o *PutQuotasProjectIDParams) WithTimeout(timeout time.Duration) *PutQuotasProjectIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put quotas project ID params
func (o *PutQuotasProjectIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put quotas project ID params
func (o *PutQuotasProjectIDParams) WithContext(ctx context.Context) *PutQuotasProjectIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put quotas project ID params
func (o *PutQuotasProjectIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put quotas project ID params
func (o *PutQuotasProjectIDParams) WithHTTPClient(client *http.Client) *PutQuotasProjectIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put quotas project ID params
func (o *PutQuotasProjectIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put quotas project ID params
func (o *PutQuotasProjectIDParams) WithBody(body *models.Quota) *PutQuotasProjectIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put quotas project ID params
func (o *PutQuotasProjectIDParams) SetBody(body *models.Quota) {
	o.Body = body
}

// WithProjectID adds the projectID to the put quotas project ID params
func (o *PutQuotasProjectIDParams) WithProjectID(projectID string) *PutQuotasProjectIDParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the put quotas project ID params
func (o *PutQuotasProjectIDParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *PutQuotasProjectIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
