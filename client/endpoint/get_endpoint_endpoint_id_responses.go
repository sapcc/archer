// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// GetEndpointEndpointIDReader is a Reader for the GetEndpointEndpointID structure.
type GetEndpointEndpointIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEndpointEndpointIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEndpointEndpointIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEndpointEndpointIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEndpointEndpointIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEndpointEndpointIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetEndpointEndpointIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEndpointEndpointIDOK creates a GetEndpointEndpointIDOK with default headers values
func NewGetEndpointEndpointIDOK() *GetEndpointEndpointIDOK {
	return &GetEndpointEndpointIDOK{}
}

/*
GetEndpointEndpointIDOK describes a response with status code 200, with default header values.

An endpoint detail.
*/
type GetEndpointEndpointIDOK struct {
	Payload *models.Endpoint
}

// IsSuccess returns true when this get endpoint endpoint Id o k response has a 2xx status code
func (o *GetEndpointEndpointIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get endpoint endpoint Id o k response has a 3xx status code
func (o *GetEndpointEndpointIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get endpoint endpoint Id o k response has a 4xx status code
func (o *GetEndpointEndpointIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get endpoint endpoint Id o k response has a 5xx status code
func (o *GetEndpointEndpointIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get endpoint endpoint Id o k response a status code equal to that given
func (o *GetEndpointEndpointIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get endpoint endpoint Id o k response
func (o *GetEndpointEndpointIDOK) Code() int {
	return 200
}

func (o *GetEndpointEndpointIDOK) Error() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdOK  %+v", 200, o.Payload)
}

func (o *GetEndpointEndpointIDOK) String() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdOK  %+v", 200, o.Payload)
}

func (o *GetEndpointEndpointIDOK) GetPayload() *models.Endpoint {
	return o.Payload
}

func (o *GetEndpointEndpointIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Endpoint)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointEndpointIDUnauthorized creates a GetEndpointEndpointIDUnauthorized with default headers values
func NewGetEndpointEndpointIDUnauthorized() *GetEndpointEndpointIDUnauthorized {
	return &GetEndpointEndpointIDUnauthorized{}
}

/*
GetEndpointEndpointIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEndpointEndpointIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get endpoint endpoint Id unauthorized response has a 2xx status code
func (o *GetEndpointEndpointIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get endpoint endpoint Id unauthorized response has a 3xx status code
func (o *GetEndpointEndpointIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get endpoint endpoint Id unauthorized response has a 4xx status code
func (o *GetEndpointEndpointIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get endpoint endpoint Id unauthorized response has a 5xx status code
func (o *GetEndpointEndpointIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get endpoint endpoint Id unauthorized response a status code equal to that given
func (o *GetEndpointEndpointIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get endpoint endpoint Id unauthorized response
func (o *GetEndpointEndpointIDUnauthorized) Code() int {
	return 401
}

func (o *GetEndpointEndpointIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEndpointEndpointIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEndpointEndpointIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEndpointEndpointIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointEndpointIDForbidden creates a GetEndpointEndpointIDForbidden with default headers values
func NewGetEndpointEndpointIDForbidden() *GetEndpointEndpointIDForbidden {
	return &GetEndpointEndpointIDForbidden{}
}

/*
GetEndpointEndpointIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEndpointEndpointIDForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get endpoint endpoint Id forbidden response has a 2xx status code
func (o *GetEndpointEndpointIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get endpoint endpoint Id forbidden response has a 3xx status code
func (o *GetEndpointEndpointIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get endpoint endpoint Id forbidden response has a 4xx status code
func (o *GetEndpointEndpointIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get endpoint endpoint Id forbidden response has a 5xx status code
func (o *GetEndpointEndpointIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get endpoint endpoint Id forbidden response a status code equal to that given
func (o *GetEndpointEndpointIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get endpoint endpoint Id forbidden response
func (o *GetEndpointEndpointIDForbidden) Code() int {
	return 403
}

func (o *GetEndpointEndpointIDForbidden) Error() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdForbidden  %+v", 403, o.Payload)
}

func (o *GetEndpointEndpointIDForbidden) String() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdForbidden  %+v", 403, o.Payload)
}

func (o *GetEndpointEndpointIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEndpointEndpointIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointEndpointIDNotFound creates a GetEndpointEndpointIDNotFound with default headers values
func NewGetEndpointEndpointIDNotFound() *GetEndpointEndpointIDNotFound {
	return &GetEndpointEndpointIDNotFound{}
}

/*
GetEndpointEndpointIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEndpointEndpointIDNotFound struct {
}

// IsSuccess returns true when this get endpoint endpoint Id not found response has a 2xx status code
func (o *GetEndpointEndpointIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get endpoint endpoint Id not found response has a 3xx status code
func (o *GetEndpointEndpointIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get endpoint endpoint Id not found response has a 4xx status code
func (o *GetEndpointEndpointIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get endpoint endpoint Id not found response has a 5xx status code
func (o *GetEndpointEndpointIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get endpoint endpoint Id not found response a status code equal to that given
func (o *GetEndpointEndpointIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get endpoint endpoint Id not found response
func (o *GetEndpointEndpointIDNotFound) Code() int {
	return 404
}

func (o *GetEndpointEndpointIDNotFound) Error() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdNotFound ", 404)
}

func (o *GetEndpointEndpointIDNotFound) String() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdNotFound ", 404)
}

func (o *GetEndpointEndpointIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointEndpointIDUnprocessableEntity creates a GetEndpointEndpointIDUnprocessableEntity with default headers values
func NewGetEndpointEndpointIDUnprocessableEntity() *GetEndpointEndpointIDUnprocessableEntity {
	return &GetEndpointEndpointIDUnprocessableEntity{}
}

/*
GetEndpointEndpointIDUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Content
*/
type GetEndpointEndpointIDUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get endpoint endpoint Id unprocessable entity response has a 2xx status code
func (o *GetEndpointEndpointIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get endpoint endpoint Id unprocessable entity response has a 3xx status code
func (o *GetEndpointEndpointIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get endpoint endpoint Id unprocessable entity response has a 4xx status code
func (o *GetEndpointEndpointIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get endpoint endpoint Id unprocessable entity response has a 5xx status code
func (o *GetEndpointEndpointIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get endpoint endpoint Id unprocessable entity response a status code equal to that given
func (o *GetEndpointEndpointIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get endpoint endpoint Id unprocessable entity response
func (o *GetEndpointEndpointIDUnprocessableEntity) Code() int {
	return 422
}

func (o *GetEndpointEndpointIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetEndpointEndpointIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /endpoint/{endpoint_id}][%d] getEndpointEndpointIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetEndpointEndpointIDUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEndpointEndpointIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
