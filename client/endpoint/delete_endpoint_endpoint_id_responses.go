// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteEndpointEndpointIDReader is a Reader for the DeleteEndpointEndpointID structure.
type DeleteEndpointEndpointIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEndpointEndpointIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEndpointEndpointIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteEndpointEndpointIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEndpointEndpointIDNoContent creates a DeleteEndpointEndpointIDNoContent with default headers values
func NewDeleteEndpointEndpointIDNoContent() *DeleteEndpointEndpointIDNoContent {
	return &DeleteEndpointEndpointIDNoContent{}
}

/*
DeleteEndpointEndpointIDNoContent describes a response with status code 204, with default header values.

Resource successfully deleted.
*/
type DeleteEndpointEndpointIDNoContent struct {
}

// IsSuccess returns true when this delete endpoint endpoint Id no content response has a 2xx status code
func (o *DeleteEndpointEndpointIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete endpoint endpoint Id no content response has a 3xx status code
func (o *DeleteEndpointEndpointIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint endpoint Id no content response has a 4xx status code
func (o *DeleteEndpointEndpointIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete endpoint endpoint Id no content response has a 5xx status code
func (o *DeleteEndpointEndpointIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint endpoint Id no content response a status code equal to that given
func (o *DeleteEndpointEndpointIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete endpoint endpoint Id no content response
func (o *DeleteEndpointEndpointIDNoContent) Code() int {
	return 204
}

func (o *DeleteEndpointEndpointIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /endpoint/{endpoint_id}][%d] deleteEndpointEndpointIdNoContent ", 204)
}

func (o *DeleteEndpointEndpointIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /endpoint/{endpoint_id}][%d] deleteEndpointEndpointIdNoContent ", 204)
}

func (o *DeleteEndpointEndpointIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointEndpointIDNotFound creates a DeleteEndpointEndpointIDNotFound with default headers values
func NewDeleteEndpointEndpointIDNotFound() *DeleteEndpointEndpointIDNotFound {
	return &DeleteEndpointEndpointIDNotFound{}
}

/*
DeleteEndpointEndpointIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteEndpointEndpointIDNotFound struct {
}

// IsSuccess returns true when this delete endpoint endpoint Id not found response has a 2xx status code
func (o *DeleteEndpointEndpointIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete endpoint endpoint Id not found response has a 3xx status code
func (o *DeleteEndpointEndpointIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint endpoint Id not found response has a 4xx status code
func (o *DeleteEndpointEndpointIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete endpoint endpoint Id not found response has a 5xx status code
func (o *DeleteEndpointEndpointIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint endpoint Id not found response a status code equal to that given
func (o *DeleteEndpointEndpointIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete endpoint endpoint Id not found response
func (o *DeleteEndpointEndpointIDNotFound) Code() int {
	return 404
}

func (o *DeleteEndpointEndpointIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /endpoint/{endpoint_id}][%d] deleteEndpointEndpointIdNotFound ", 404)
}

func (o *DeleteEndpointEndpointIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /endpoint/{endpoint_id}][%d] deleteEndpointEndpointIdNotFound ", 404)
}

func (o *DeleteEndpointEndpointIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
