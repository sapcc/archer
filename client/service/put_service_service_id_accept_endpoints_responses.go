// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// PutServiceServiceIDAcceptEndpointsReader is a Reader for the PutServiceServiceIDAcceptEndpoints structure.
type PutServiceServiceIDAcceptEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutServiceServiceIDAcceptEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutServiceServiceIDAcceptEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutServiceServiceIDAcceptEndpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutServiceServiceIDAcceptEndpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutServiceServiceIDAcceptEndpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutServiceServiceIDAcceptEndpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutServiceServiceIDAcceptEndpointsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutServiceServiceIDAcceptEndpointsOK creates a PutServiceServiceIDAcceptEndpointsOK with default headers values
func NewPutServiceServiceIDAcceptEndpointsOK() *PutServiceServiceIDAcceptEndpointsOK {
	return &PutServiceServiceIDAcceptEndpointsOK{}
}

/*
PutServiceServiceIDAcceptEndpointsOK describes a response with status code 200, with default header values.

Ok
*/
type PutServiceServiceIDAcceptEndpointsOK struct {
	Payload []*models.EndpointConsumer
}

// IsSuccess returns true when this put service service Id accept endpoints o k response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put service service Id accept endpoints o k response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints o k response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put service service Id accept endpoints o k response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints o k response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put service service Id accept endpoints o k response
func (o *PutServiceServiceIDAcceptEndpointsOK) Code() int {
	return 200
}

func (o *PutServiceServiceIDAcceptEndpointsOK) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsOK  %+v", 200, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsOK) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsOK  %+v", 200, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsOK) GetPayload() []*models.EndpointConsumer {
	return o.Payload
}

func (o *PutServiceServiceIDAcceptEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDAcceptEndpointsBadRequest creates a PutServiceServiceIDAcceptEndpointsBadRequest with default headers values
func NewPutServiceServiceIDAcceptEndpointsBadRequest() *PutServiceServiceIDAcceptEndpointsBadRequest {
	return &PutServiceServiceIDAcceptEndpointsBadRequest{}
}

/*
PutServiceServiceIDAcceptEndpointsBadRequest describes a response with status code 400, with default header values.

Must declare at least one, endpoint_id(s) or project_id(s)
*/
type PutServiceServiceIDAcceptEndpointsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id accept endpoints bad request response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id accept endpoints bad request response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints bad request response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id accept endpoints bad request response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints bad request response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put service service Id accept endpoints bad request response
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) Code() int {
	return 400
}

func (o *PutServiceServiceIDAcceptEndpointsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsBadRequest  %+v", 400, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsBadRequest) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsBadRequest  %+v", 400, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDAcceptEndpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDAcceptEndpointsUnauthorized creates a PutServiceServiceIDAcceptEndpointsUnauthorized with default headers values
func NewPutServiceServiceIDAcceptEndpointsUnauthorized() *PutServiceServiceIDAcceptEndpointsUnauthorized {
	return &PutServiceServiceIDAcceptEndpointsUnauthorized{}
}

/*
PutServiceServiceIDAcceptEndpointsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutServiceServiceIDAcceptEndpointsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id accept endpoints unauthorized response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id accept endpoints unauthorized response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints unauthorized response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id accept endpoints unauthorized response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints unauthorized response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put service service Id accept endpoints unauthorized response
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) Code() int {
	return 401
}

func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDAcceptEndpointsForbidden creates a PutServiceServiceIDAcceptEndpointsForbidden with default headers values
func NewPutServiceServiceIDAcceptEndpointsForbidden() *PutServiceServiceIDAcceptEndpointsForbidden {
	return &PutServiceServiceIDAcceptEndpointsForbidden{}
}

/*
PutServiceServiceIDAcceptEndpointsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutServiceServiceIDAcceptEndpointsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id accept endpoints forbidden response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id accept endpoints forbidden response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints forbidden response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id accept endpoints forbidden response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints forbidden response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put service service Id accept endpoints forbidden response
func (o *PutServiceServiceIDAcceptEndpointsForbidden) Code() int {
	return 403
}

func (o *PutServiceServiceIDAcceptEndpointsForbidden) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsForbidden  %+v", 403, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsForbidden) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsForbidden  %+v", 403, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDAcceptEndpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDAcceptEndpointsNotFound creates a PutServiceServiceIDAcceptEndpointsNotFound with default headers values
func NewPutServiceServiceIDAcceptEndpointsNotFound() *PutServiceServiceIDAcceptEndpointsNotFound {
	return &PutServiceServiceIDAcceptEndpointsNotFound{}
}

/*
PutServiceServiceIDAcceptEndpointsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutServiceServiceIDAcceptEndpointsNotFound struct {
}

// IsSuccess returns true when this put service service Id accept endpoints not found response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id accept endpoints not found response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints not found response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id accept endpoints not found response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints not found response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put service service Id accept endpoints not found response
func (o *PutServiceServiceIDAcceptEndpointsNotFound) Code() int {
	return 404
}

func (o *PutServiceServiceIDAcceptEndpointsNotFound) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsNotFound ", 404)
}

func (o *PutServiceServiceIDAcceptEndpointsNotFound) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsNotFound ", 404)
}

func (o *PutServiceServiceIDAcceptEndpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutServiceServiceIDAcceptEndpointsUnprocessableEntity creates a PutServiceServiceIDAcceptEndpointsUnprocessableEntity with default headers values
func NewPutServiceServiceIDAcceptEndpointsUnprocessableEntity() *PutServiceServiceIDAcceptEndpointsUnprocessableEntity {
	return &PutServiceServiceIDAcceptEndpointsUnprocessableEntity{}
}

/*
PutServiceServiceIDAcceptEndpointsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Content
*/
type PutServiceServiceIDAcceptEndpointsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id accept endpoints unprocessable entity response has a 2xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id accept endpoints unprocessable entity response has a 3xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id accept endpoints unprocessable entity response has a 4xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id accept endpoints unprocessable entity response has a 5xx status code
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id accept endpoints unprocessable entity response a status code equal to that given
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the put service service Id accept endpoints unprocessable entity response
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) Code() int {
	return 422
}

func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/accept_endpoints][%d] putServiceServiceIdAcceptEndpointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
