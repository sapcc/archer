// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// PutServiceServiceIDRejectEndpointsReader is a Reader for the PutServiceServiceIDRejectEndpoints structure.
type PutServiceServiceIDRejectEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutServiceServiceIDRejectEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutServiceServiceIDRejectEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutServiceServiceIDRejectEndpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutServiceServiceIDRejectEndpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutServiceServiceIDRejectEndpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutServiceServiceIDRejectEndpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutServiceServiceIDRejectEndpointsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutServiceServiceIDRejectEndpointsOK creates a PutServiceServiceIDRejectEndpointsOK with default headers values
func NewPutServiceServiceIDRejectEndpointsOK() *PutServiceServiceIDRejectEndpointsOK {
	return &PutServiceServiceIDRejectEndpointsOK{}
}

/*
PutServiceServiceIDRejectEndpointsOK describes a response with status code 200, with default header values.

Ok
*/
type PutServiceServiceIDRejectEndpointsOK struct {
	Payload []*models.EndpointConsumer
}

// IsSuccess returns true when this put service service Id reject endpoints o k response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put service service Id reject endpoints o k response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints o k response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put service service Id reject endpoints o k response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints o k response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put service service Id reject endpoints o k response
func (o *PutServiceServiceIDRejectEndpointsOK) Code() int {
	return 200
}

func (o *PutServiceServiceIDRejectEndpointsOK) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsOK  %+v", 200, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsOK) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsOK  %+v", 200, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsOK) GetPayload() []*models.EndpointConsumer {
	return o.Payload
}

func (o *PutServiceServiceIDRejectEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDRejectEndpointsBadRequest creates a PutServiceServiceIDRejectEndpointsBadRequest with default headers values
func NewPutServiceServiceIDRejectEndpointsBadRequest() *PutServiceServiceIDRejectEndpointsBadRequest {
	return &PutServiceServiceIDRejectEndpointsBadRequest{}
}

/*
PutServiceServiceIDRejectEndpointsBadRequest describes a response with status code 400, with default header values.

Must declare at least one, endpoint_id(s) or project_id(s)
*/
type PutServiceServiceIDRejectEndpointsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id reject endpoints bad request response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id reject endpoints bad request response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints bad request response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id reject endpoints bad request response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints bad request response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put service service Id reject endpoints bad request response
func (o *PutServiceServiceIDRejectEndpointsBadRequest) Code() int {
	return 400
}

func (o *PutServiceServiceIDRejectEndpointsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsBadRequest  %+v", 400, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsBadRequest) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsBadRequest  %+v", 400, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDRejectEndpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDRejectEndpointsUnauthorized creates a PutServiceServiceIDRejectEndpointsUnauthorized with default headers values
func NewPutServiceServiceIDRejectEndpointsUnauthorized() *PutServiceServiceIDRejectEndpointsUnauthorized {
	return &PutServiceServiceIDRejectEndpointsUnauthorized{}
}

/*
PutServiceServiceIDRejectEndpointsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutServiceServiceIDRejectEndpointsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id reject endpoints unauthorized response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id reject endpoints unauthorized response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints unauthorized response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id reject endpoints unauthorized response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints unauthorized response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put service service Id reject endpoints unauthorized response
func (o *PutServiceServiceIDRejectEndpointsUnauthorized) Code() int {
	return 401
}

func (o *PutServiceServiceIDRejectEndpointsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDRejectEndpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDRejectEndpointsForbidden creates a PutServiceServiceIDRejectEndpointsForbidden with default headers values
func NewPutServiceServiceIDRejectEndpointsForbidden() *PutServiceServiceIDRejectEndpointsForbidden {
	return &PutServiceServiceIDRejectEndpointsForbidden{}
}

/*
PutServiceServiceIDRejectEndpointsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutServiceServiceIDRejectEndpointsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id reject endpoints forbidden response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id reject endpoints forbidden response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints forbidden response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id reject endpoints forbidden response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints forbidden response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put service service Id reject endpoints forbidden response
func (o *PutServiceServiceIDRejectEndpointsForbidden) Code() int {
	return 403
}

func (o *PutServiceServiceIDRejectEndpointsForbidden) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsForbidden  %+v", 403, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsForbidden) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsForbidden  %+v", 403, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDRejectEndpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServiceServiceIDRejectEndpointsNotFound creates a PutServiceServiceIDRejectEndpointsNotFound with default headers values
func NewPutServiceServiceIDRejectEndpointsNotFound() *PutServiceServiceIDRejectEndpointsNotFound {
	return &PutServiceServiceIDRejectEndpointsNotFound{}
}

/*
PutServiceServiceIDRejectEndpointsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutServiceServiceIDRejectEndpointsNotFound struct {
}

// IsSuccess returns true when this put service service Id reject endpoints not found response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id reject endpoints not found response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints not found response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id reject endpoints not found response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints not found response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put service service Id reject endpoints not found response
func (o *PutServiceServiceIDRejectEndpointsNotFound) Code() int {
	return 404
}

func (o *PutServiceServiceIDRejectEndpointsNotFound) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsNotFound ", 404)
}

func (o *PutServiceServiceIDRejectEndpointsNotFound) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsNotFound ", 404)
}

func (o *PutServiceServiceIDRejectEndpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutServiceServiceIDRejectEndpointsUnprocessableEntity creates a PutServiceServiceIDRejectEndpointsUnprocessableEntity with default headers values
func NewPutServiceServiceIDRejectEndpointsUnprocessableEntity() *PutServiceServiceIDRejectEndpointsUnprocessableEntity {
	return &PutServiceServiceIDRejectEndpointsUnprocessableEntity{}
}

/*
PutServiceServiceIDRejectEndpointsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Content
*/
type PutServiceServiceIDRejectEndpointsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this put service service Id reject endpoints unprocessable entity response has a 2xx status code
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put service service Id reject endpoints unprocessable entity response has a 3xx status code
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put service service Id reject endpoints unprocessable entity response has a 4xx status code
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put service service Id reject endpoints unprocessable entity response has a 5xx status code
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put service service Id reject endpoints unprocessable entity response a status code equal to that given
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the put service service Id reject endpoints unprocessable entity response
func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) Code() int {
	return 422
}

func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /service/{service_id}/reject_endpoints][%d] putServiceServiceIdRejectEndpointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutServiceServiceIDRejectEndpointsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
