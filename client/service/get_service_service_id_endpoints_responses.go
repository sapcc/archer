// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// GetServiceServiceIDEndpointsReader is a Reader for the GetServiceServiceIDEndpoints structure.
type GetServiceServiceIDEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceServiceIDEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceServiceIDEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetServiceServiceIDEndpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetServiceServiceIDEndpointsOK creates a GetServiceServiceIDEndpointsOK with default headers values
func NewGetServiceServiceIDEndpointsOK() *GetServiceServiceIDEndpointsOK {
	return &GetServiceServiceIDEndpointsOK{}
}

/*
GetServiceServiceIDEndpointsOK describes a response with status code 200, with default header values.

An array of service endpoint consumers.
*/
type GetServiceServiceIDEndpointsOK struct {
	Payload []*models.EndpointConsumer
}

// IsSuccess returns true when this get service service Id endpoints o k response has a 2xx status code
func (o *GetServiceServiceIDEndpointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get service service Id endpoints o k response has a 3xx status code
func (o *GetServiceServiceIDEndpointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id endpoints o k response has a 4xx status code
func (o *GetServiceServiceIDEndpointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get service service Id endpoints o k response has a 5xx status code
func (o *GetServiceServiceIDEndpointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id endpoints o k response a status code equal to that given
func (o *GetServiceServiceIDEndpointsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get service service Id endpoints o k response
func (o *GetServiceServiceIDEndpointsOK) Code() int {
	return 200
}

func (o *GetServiceServiceIDEndpointsOK) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}/endpoints][%d] getServiceServiceIdEndpointsOK  %+v", 200, o.Payload)
}

func (o *GetServiceServiceIDEndpointsOK) String() string {
	return fmt.Sprintf("[GET /service/{service_id}/endpoints][%d] getServiceServiceIdEndpointsOK  %+v", 200, o.Payload)
}

func (o *GetServiceServiceIDEndpointsOK) GetPayload() []*models.EndpointConsumer {
	return o.Payload
}

func (o *GetServiceServiceIDEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceServiceIDEndpointsNotFound creates a GetServiceServiceIDEndpointsNotFound with default headers values
func NewGetServiceServiceIDEndpointsNotFound() *GetServiceServiceIDEndpointsNotFound {
	return &GetServiceServiceIDEndpointsNotFound{}
}

/*
GetServiceServiceIDEndpointsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetServiceServiceIDEndpointsNotFound struct {
}

// IsSuccess returns true when this get service service Id endpoints not found response has a 2xx status code
func (o *GetServiceServiceIDEndpointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service service Id endpoints not found response has a 3xx status code
func (o *GetServiceServiceIDEndpointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id endpoints not found response has a 4xx status code
func (o *GetServiceServiceIDEndpointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service service Id endpoints not found response has a 5xx status code
func (o *GetServiceServiceIDEndpointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id endpoints not found response a status code equal to that given
func (o *GetServiceServiceIDEndpointsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get service service Id endpoints not found response
func (o *GetServiceServiceIDEndpointsNotFound) Code() int {
	return 404
}

func (o *GetServiceServiceIDEndpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}/endpoints][%d] getServiceServiceIdEndpointsNotFound ", 404)
}

func (o *GetServiceServiceIDEndpointsNotFound) String() string {
	return fmt.Sprintf("[GET /service/{service_id}/endpoints][%d] getServiceServiceIdEndpointsNotFound ", 404)
}

func (o *GetServiceServiceIDEndpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
