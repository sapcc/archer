// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// DeleteServiceServiceIDReader is a Reader for the DeleteServiceServiceID structure.
type DeleteServiceServiceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServiceServiceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteServiceServiceIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteServiceServiceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteServiceServiceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteServiceServiceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteServiceServiceIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteServiceServiceIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteServiceServiceIDAccepted creates a DeleteServiceServiceIDAccepted with default headers values
func NewDeleteServiceServiceIDAccepted() *DeleteServiceServiceIDAccepted {
	return &DeleteServiceServiceIDAccepted{}
}

/*
DeleteServiceServiceIDAccepted describes a response with status code 202, with default header values.

Delete request successfully accepted.
*/
type DeleteServiceServiceIDAccepted struct {
}

// IsSuccess returns true when this delete service service Id accepted response has a 2xx status code
func (o *DeleteServiceServiceIDAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete service service Id accepted response has a 3xx status code
func (o *DeleteServiceServiceIDAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id accepted response has a 4xx status code
func (o *DeleteServiceServiceIDAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete service service Id accepted response has a 5xx status code
func (o *DeleteServiceServiceIDAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id accepted response a status code equal to that given
func (o *DeleteServiceServiceIDAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete service service Id accepted response
func (o *DeleteServiceServiceIDAccepted) Code() int {
	return 202
}

func (o *DeleteServiceServiceIDAccepted) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdAccepted ", 202)
}

func (o *DeleteServiceServiceIDAccepted) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdAccepted ", 202)
}

func (o *DeleteServiceServiceIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceServiceIDUnauthorized creates a DeleteServiceServiceIDUnauthorized with default headers values
func NewDeleteServiceServiceIDUnauthorized() *DeleteServiceServiceIDUnauthorized {
	return &DeleteServiceServiceIDUnauthorized{}
}

/*
DeleteServiceServiceIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteServiceServiceIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service service Id unauthorized response has a 2xx status code
func (o *DeleteServiceServiceIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service service Id unauthorized response has a 3xx status code
func (o *DeleteServiceServiceIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id unauthorized response has a 4xx status code
func (o *DeleteServiceServiceIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service service Id unauthorized response has a 5xx status code
func (o *DeleteServiceServiceIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id unauthorized response a status code equal to that given
func (o *DeleteServiceServiceIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete service service Id unauthorized response
func (o *DeleteServiceServiceIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteServiceServiceIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteServiceServiceIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteServiceServiceIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceServiceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceServiceIDForbidden creates a DeleteServiceServiceIDForbidden with default headers values
func NewDeleteServiceServiceIDForbidden() *DeleteServiceServiceIDForbidden {
	return &DeleteServiceServiceIDForbidden{}
}

/*
DeleteServiceServiceIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteServiceServiceIDForbidden struct {
}

// IsSuccess returns true when this delete service service Id forbidden response has a 2xx status code
func (o *DeleteServiceServiceIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service service Id forbidden response has a 3xx status code
func (o *DeleteServiceServiceIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id forbidden response has a 4xx status code
func (o *DeleteServiceServiceIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service service Id forbidden response has a 5xx status code
func (o *DeleteServiceServiceIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id forbidden response a status code equal to that given
func (o *DeleteServiceServiceIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete service service Id forbidden response
func (o *DeleteServiceServiceIDForbidden) Code() int {
	return 403
}

func (o *DeleteServiceServiceIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdForbidden ", 403)
}

func (o *DeleteServiceServiceIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdForbidden ", 403)
}

func (o *DeleteServiceServiceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceServiceIDNotFound creates a DeleteServiceServiceIDNotFound with default headers values
func NewDeleteServiceServiceIDNotFound() *DeleteServiceServiceIDNotFound {
	return &DeleteServiceServiceIDNotFound{}
}

/*
DeleteServiceServiceIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteServiceServiceIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service service Id not found response has a 2xx status code
func (o *DeleteServiceServiceIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service service Id not found response has a 3xx status code
func (o *DeleteServiceServiceIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id not found response has a 4xx status code
func (o *DeleteServiceServiceIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service service Id not found response has a 5xx status code
func (o *DeleteServiceServiceIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id not found response a status code equal to that given
func (o *DeleteServiceServiceIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete service service Id not found response
func (o *DeleteServiceServiceIDNotFound) Code() int {
	return 404
}

func (o *DeleteServiceServiceIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServiceServiceIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServiceServiceIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceServiceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceServiceIDConflict creates a DeleteServiceServiceIDConflict with default headers values
func NewDeleteServiceServiceIDConflict() *DeleteServiceServiceIDConflict {
	return &DeleteServiceServiceIDConflict{}
}

/*
DeleteServiceServiceIDConflict describes a response with status code 409, with default header values.

In use.
*/
type DeleteServiceServiceIDConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service service Id conflict response has a 2xx status code
func (o *DeleteServiceServiceIDConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service service Id conflict response has a 3xx status code
func (o *DeleteServiceServiceIDConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id conflict response has a 4xx status code
func (o *DeleteServiceServiceIDConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service service Id conflict response has a 5xx status code
func (o *DeleteServiceServiceIDConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id conflict response a status code equal to that given
func (o *DeleteServiceServiceIDConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete service service Id conflict response
func (o *DeleteServiceServiceIDConflict) Code() int {
	return 409
}

func (o *DeleteServiceServiceIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdConflict  %+v", 409, o.Payload)
}

func (o *DeleteServiceServiceIDConflict) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdConflict  %+v", 409, o.Payload)
}

func (o *DeleteServiceServiceIDConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceServiceIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceServiceIDUnprocessableEntity creates a DeleteServiceServiceIDUnprocessableEntity with default headers values
func NewDeleteServiceServiceIDUnprocessableEntity() *DeleteServiceServiceIDUnprocessableEntity {
	return &DeleteServiceServiceIDUnprocessableEntity{}
}

/*
DeleteServiceServiceIDUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Content
*/
type DeleteServiceServiceIDUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service service Id unprocessable entity response has a 2xx status code
func (o *DeleteServiceServiceIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service service Id unprocessable entity response has a 3xx status code
func (o *DeleteServiceServiceIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service service Id unprocessable entity response has a 4xx status code
func (o *DeleteServiceServiceIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service service Id unprocessable entity response has a 5xx status code
func (o *DeleteServiceServiceIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service service Id unprocessable entity response a status code equal to that given
func (o *DeleteServiceServiceIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete service service Id unprocessable entity response
func (o *DeleteServiceServiceIDUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteServiceServiceIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteServiceServiceIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /service/{service_id}][%d] deleteServiceServiceIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteServiceServiceIDUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceServiceIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
