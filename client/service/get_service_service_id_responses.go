// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// GetServiceServiceIDReader is a Reader for the GetServiceServiceID structure.
type GetServiceServiceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceServiceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceServiceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServiceServiceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceServiceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceServiceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetServiceServiceIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetServiceServiceIDOK creates a GetServiceServiceIDOK with default headers values
func NewGetServiceServiceIDOK() *GetServiceServiceIDOK {
	return &GetServiceServiceIDOK{}
}

/*
GetServiceServiceIDOK describes a response with status code 200, with default header values.

Service
*/
type GetServiceServiceIDOK struct {
	Payload *models.Service
}

// IsSuccess returns true when this get service service Id o k response has a 2xx status code
func (o *GetServiceServiceIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get service service Id o k response has a 3xx status code
func (o *GetServiceServiceIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id o k response has a 4xx status code
func (o *GetServiceServiceIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get service service Id o k response has a 5xx status code
func (o *GetServiceServiceIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id o k response a status code equal to that given
func (o *GetServiceServiceIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get service service Id o k response
func (o *GetServiceServiceIDOK) Code() int {
	return 200
}

func (o *GetServiceServiceIDOK) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdOK  %+v", 200, o.Payload)
}

func (o *GetServiceServiceIDOK) String() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdOK  %+v", 200, o.Payload)
}

func (o *GetServiceServiceIDOK) GetPayload() *models.Service {
	return o.Payload
}

func (o *GetServiceServiceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Service)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceServiceIDUnauthorized creates a GetServiceServiceIDUnauthorized with default headers values
func NewGetServiceServiceIDUnauthorized() *GetServiceServiceIDUnauthorized {
	return &GetServiceServiceIDUnauthorized{}
}

/*
GetServiceServiceIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetServiceServiceIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get service service Id unauthorized response has a 2xx status code
func (o *GetServiceServiceIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service service Id unauthorized response has a 3xx status code
func (o *GetServiceServiceIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id unauthorized response has a 4xx status code
func (o *GetServiceServiceIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service service Id unauthorized response has a 5xx status code
func (o *GetServiceServiceIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id unauthorized response a status code equal to that given
func (o *GetServiceServiceIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get service service Id unauthorized response
func (o *GetServiceServiceIDUnauthorized) Code() int {
	return 401
}

func (o *GetServiceServiceIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServiceServiceIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServiceServiceIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceServiceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceServiceIDForbidden creates a GetServiceServiceIDForbidden with default headers values
func NewGetServiceServiceIDForbidden() *GetServiceServiceIDForbidden {
	return &GetServiceServiceIDForbidden{}
}

/*
GetServiceServiceIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetServiceServiceIDForbidden struct {
}

// IsSuccess returns true when this get service service Id forbidden response has a 2xx status code
func (o *GetServiceServiceIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service service Id forbidden response has a 3xx status code
func (o *GetServiceServiceIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id forbidden response has a 4xx status code
func (o *GetServiceServiceIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service service Id forbidden response has a 5xx status code
func (o *GetServiceServiceIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id forbidden response a status code equal to that given
func (o *GetServiceServiceIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get service service Id forbidden response
func (o *GetServiceServiceIDForbidden) Code() int {
	return 403
}

func (o *GetServiceServiceIDForbidden) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdForbidden ", 403)
}

func (o *GetServiceServiceIDForbidden) String() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdForbidden ", 403)
}

func (o *GetServiceServiceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceServiceIDNotFound creates a GetServiceServiceIDNotFound with default headers values
func NewGetServiceServiceIDNotFound() *GetServiceServiceIDNotFound {
	return &GetServiceServiceIDNotFound{}
}

/*
GetServiceServiceIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetServiceServiceIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get service service Id not found response has a 2xx status code
func (o *GetServiceServiceIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service service Id not found response has a 3xx status code
func (o *GetServiceServiceIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id not found response has a 4xx status code
func (o *GetServiceServiceIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service service Id not found response has a 5xx status code
func (o *GetServiceServiceIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id not found response a status code equal to that given
func (o *GetServiceServiceIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get service service Id not found response
func (o *GetServiceServiceIDNotFound) Code() int {
	return 404
}

func (o *GetServiceServiceIDNotFound) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServiceServiceIDNotFound) String() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServiceServiceIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceServiceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceServiceIDUnprocessableEntity creates a GetServiceServiceIDUnprocessableEntity with default headers values
func NewGetServiceServiceIDUnprocessableEntity() *GetServiceServiceIDUnprocessableEntity {
	return &GetServiceServiceIDUnprocessableEntity{}
}

/*
GetServiceServiceIDUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Content
*/
type GetServiceServiceIDUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get service service Id unprocessable entity response has a 2xx status code
func (o *GetServiceServiceIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service service Id unprocessable entity response has a 3xx status code
func (o *GetServiceServiceIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service service Id unprocessable entity response has a 4xx status code
func (o *GetServiceServiceIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service service Id unprocessable entity response has a 5xx status code
func (o *GetServiceServiceIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get service service Id unprocessable entity response a status code equal to that given
func (o *GetServiceServiceIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get service service Id unprocessable entity response
func (o *GetServiceServiceIDUnprocessableEntity) Code() int {
	return 422
}

func (o *GetServiceServiceIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetServiceServiceIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /service/{service_id}][%d] getServiceServiceIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetServiceServiceIDUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceServiceIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
