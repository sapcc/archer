// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/archer/models"
)

// PutEndpointEndpointIDOKCode is the HTTP code returned for type PutEndpointEndpointIDOK
const PutEndpointEndpointIDOKCode int = 200

/*
PutEndpointEndpointIDOK Endpoint

swagger:response putEndpointEndpointIdOK
*/
type PutEndpointEndpointIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Endpoint `json:"body,omitempty"`
}

// NewPutEndpointEndpointIDOK creates PutEndpointEndpointIDOK with default headers values
func NewPutEndpointEndpointIDOK() *PutEndpointEndpointIDOK {

	return &PutEndpointEndpointIDOK{}
}

// WithPayload adds the payload to the put endpoint endpoint Id o k response
func (o *PutEndpointEndpointIDOK) WithPayload(payload *models.Endpoint) *PutEndpointEndpointIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint endpoint Id o k response
func (o *PutEndpointEndpointIDOK) SetPayload(payload *models.Endpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointEndpointIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEndpointEndpointIDUnauthorizedCode is the HTTP code returned for type PutEndpointEndpointIDUnauthorized
const PutEndpointEndpointIDUnauthorizedCode int = 401

/*
PutEndpointEndpointIDUnauthorized Unauthorized

swagger:response putEndpointEndpointIdUnauthorized
*/
type PutEndpointEndpointIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEndpointEndpointIDUnauthorized creates PutEndpointEndpointIDUnauthorized with default headers values
func NewPutEndpointEndpointIDUnauthorized() *PutEndpointEndpointIDUnauthorized {

	return &PutEndpointEndpointIDUnauthorized{}
}

// WithPayload adds the payload to the put endpoint endpoint Id unauthorized response
func (o *PutEndpointEndpointIDUnauthorized) WithPayload(payload *models.Error) *PutEndpointEndpointIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint endpoint Id unauthorized response
func (o *PutEndpointEndpointIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointEndpointIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEndpointEndpointIDForbiddenCode is the HTTP code returned for type PutEndpointEndpointIDForbidden
const PutEndpointEndpointIDForbiddenCode int = 403

/*
PutEndpointEndpointIDForbidden Forbidden

swagger:response putEndpointEndpointIdForbidden
*/
type PutEndpointEndpointIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEndpointEndpointIDForbidden creates PutEndpointEndpointIDForbidden with default headers values
func NewPutEndpointEndpointIDForbidden() *PutEndpointEndpointIDForbidden {

	return &PutEndpointEndpointIDForbidden{}
}

// WithPayload adds the payload to the put endpoint endpoint Id forbidden response
func (o *PutEndpointEndpointIDForbidden) WithPayload(payload *models.Error) *PutEndpointEndpointIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint endpoint Id forbidden response
func (o *PutEndpointEndpointIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointEndpointIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEndpointEndpointIDNotFoundCode is the HTTP code returned for type PutEndpointEndpointIDNotFound
const PutEndpointEndpointIDNotFoundCode int = 404

/*
PutEndpointEndpointIDNotFound Not Found

swagger:response putEndpointEndpointIdNotFound
*/
type PutEndpointEndpointIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEndpointEndpointIDNotFound creates PutEndpointEndpointIDNotFound with default headers values
func NewPutEndpointEndpointIDNotFound() *PutEndpointEndpointIDNotFound {

	return &PutEndpointEndpointIDNotFound{}
}

// WithPayload adds the payload to the put endpoint endpoint Id not found response
func (o *PutEndpointEndpointIDNotFound) WithPayload(payload *models.Error) *PutEndpointEndpointIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint endpoint Id not found response
func (o *PutEndpointEndpointIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointEndpointIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutEndpointEndpointIDUnprocessableEntityCode is the HTTP code returned for type PutEndpointEndpointIDUnprocessableEntity
const PutEndpointEndpointIDUnprocessableEntityCode int = 422

/*
PutEndpointEndpointIDUnprocessableEntity Unprocessable Content

swagger:response putEndpointEndpointIdUnprocessableEntity
*/
type PutEndpointEndpointIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEndpointEndpointIDUnprocessableEntity creates PutEndpointEndpointIDUnprocessableEntity with default headers values
func NewPutEndpointEndpointIDUnprocessableEntity() *PutEndpointEndpointIDUnprocessableEntity {

	return &PutEndpointEndpointIDUnprocessableEntity{}
}

// WithPayload adds the payload to the put endpoint endpoint Id unprocessable entity response
func (o *PutEndpointEndpointIDUnprocessableEntity) WithPayload(payload *models.Error) *PutEndpointEndpointIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint endpoint Id unprocessable entity response
func (o *PutEndpointEndpointIDUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointEndpointIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
