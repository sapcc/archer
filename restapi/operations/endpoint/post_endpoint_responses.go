// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/archer/models"
)

// PostEndpointCreatedCode is the HTTP code returned for type PostEndpointCreated
const PostEndpointCreatedCode int = 201

/*
PostEndpointCreated Endpoint

swagger:response postEndpointCreated
*/
type PostEndpointCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Endpoint `json:"body,omitempty"`
}

// NewPostEndpointCreated creates PostEndpointCreated with default headers values
func NewPostEndpointCreated() *PostEndpointCreated {

	return &PostEndpointCreated{}
}

// WithPayload adds the payload to the post endpoint created response
func (o *PostEndpointCreated) WithPayload(payload *models.Endpoint) *PostEndpointCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post endpoint created response
func (o *PostEndpointCreated) SetPayload(payload *models.Endpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEndpointCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEndpointBadRequestCode is the HTTP code returned for type PostEndpointBadRequest
const PostEndpointBadRequestCode int = 400

/*
PostEndpointBadRequest Bad request

swagger:response postEndpointBadRequest
*/
type PostEndpointBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEndpointBadRequest creates PostEndpointBadRequest with default headers values
func NewPostEndpointBadRequest() *PostEndpointBadRequest {

	return &PostEndpointBadRequest{}
}

// WithPayload adds the payload to the post endpoint bad request response
func (o *PostEndpointBadRequest) WithPayload(payload *models.Error) *PostEndpointBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post endpoint bad request response
func (o *PostEndpointBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEndpointBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEndpointUnauthorizedCode is the HTTP code returned for type PostEndpointUnauthorized
const PostEndpointUnauthorizedCode int = 401

/*
PostEndpointUnauthorized Unauthorized

swagger:response postEndpointUnauthorized
*/
type PostEndpointUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEndpointUnauthorized creates PostEndpointUnauthorized with default headers values
func NewPostEndpointUnauthorized() *PostEndpointUnauthorized {

	return &PostEndpointUnauthorized{}
}

// WithPayload adds the payload to the post endpoint unauthorized response
func (o *PostEndpointUnauthorized) WithPayload(payload *models.Error) *PostEndpointUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post endpoint unauthorized response
func (o *PostEndpointUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEndpointUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEndpointForbiddenCode is the HTTP code returned for type PostEndpointForbidden
const PostEndpointForbiddenCode int = 403

/*
PostEndpointForbidden Forbidden

swagger:response postEndpointForbidden
*/
type PostEndpointForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEndpointForbidden creates PostEndpointForbidden with default headers values
func NewPostEndpointForbidden() *PostEndpointForbidden {

	return &PostEndpointForbidden{}
}

// WithPayload adds the payload to the post endpoint forbidden response
func (o *PostEndpointForbidden) WithPayload(payload *models.Error) *PostEndpointForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post endpoint forbidden response
func (o *PostEndpointForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEndpointForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEndpointUnprocessableEntityCode is the HTTP code returned for type PostEndpointUnprocessableEntity
const PostEndpointUnprocessableEntityCode int = 422

/*
PostEndpointUnprocessableEntity Unprocessable Content

swagger:response postEndpointUnprocessableEntity
*/
type PostEndpointUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEndpointUnprocessableEntity creates PostEndpointUnprocessableEntity with default headers values
func NewPostEndpointUnprocessableEntity() *PostEndpointUnprocessableEntity {

	return &PostEndpointUnprocessableEntity{}
}

// WithPayload adds the payload to the post endpoint unprocessable entity response
func (o *PostEndpointUnprocessableEntity) WithPayload(payload *models.Error) *PostEndpointUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post endpoint unprocessable entity response
func (o *PostEndpointUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEndpointUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
