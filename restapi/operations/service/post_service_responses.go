// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/archer/models"
)

// PostServiceCreatedCode is the HTTP code returned for type PostServiceCreated
const PostServiceCreatedCode int = 201

/*
PostServiceCreated Service

swagger:response postServiceCreated
*/
type PostServiceCreated struct {
	/*The UUID of the created resource

	 */
	XTargetID strfmt.UUID `json:"X-Target-Id"`

	/*
	  In: Body
	*/
	Payload *models.Service `json:"body,omitempty"`
}

// NewPostServiceCreated creates PostServiceCreated with default headers values
func NewPostServiceCreated() *PostServiceCreated {

	return &PostServiceCreated{}
}

// WithXTargetID adds the xTargetId to the post service created response
func (o *PostServiceCreated) WithXTargetID(xTargetID strfmt.UUID) *PostServiceCreated {
	o.XTargetID = xTargetID
	return o
}

// SetXTargetID sets the xTargetId to the post service created response
func (o *PostServiceCreated) SetXTargetID(xTargetID strfmt.UUID) {
	o.XTargetID = xTargetID
}

// WithPayload adds the payload to the post service created response
func (o *PostServiceCreated) WithPayload(payload *models.Service) *PostServiceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service created response
func (o *PostServiceCreated) SetPayload(payload *models.Service) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Target-Id

	xTargetID := o.XTargetID.String()
	if xTargetID != "" {
		rw.Header().Set("X-Target-Id", xTargetID)
	}

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostServiceUnauthorizedCode is the HTTP code returned for type PostServiceUnauthorized
const PostServiceUnauthorizedCode int = 401

/*
PostServiceUnauthorized Unauthorized

swagger:response postServiceUnauthorized
*/
type PostServiceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceUnauthorized creates PostServiceUnauthorized with default headers values
func NewPostServiceUnauthorized() *PostServiceUnauthorized {

	return &PostServiceUnauthorized{}
}

// WithPayload adds the payload to the post service unauthorized response
func (o *PostServiceUnauthorized) WithPayload(payload *models.Error) *PostServiceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service unauthorized response
func (o *PostServiceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostServiceForbiddenCode is the HTTP code returned for type PostServiceForbidden
const PostServiceForbiddenCode int = 403

/*
PostServiceForbidden Forbidden

swagger:response postServiceForbidden
*/
type PostServiceForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceForbidden creates PostServiceForbidden with default headers values
func NewPostServiceForbidden() *PostServiceForbidden {

	return &PostServiceForbidden{}
}

// WithPayload adds the payload to the post service forbidden response
func (o *PostServiceForbidden) WithPayload(payload *models.Error) *PostServiceForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service forbidden response
func (o *PostServiceForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostServiceConflictCode is the HTTP code returned for type PostServiceConflict
const PostServiceConflictCode int = 409

/*
PostServiceConflict Duplicate entry

swagger:response postServiceConflict
*/
type PostServiceConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceConflict creates PostServiceConflict with default headers values
func NewPostServiceConflict() *PostServiceConflict {

	return &PostServiceConflict{}
}

// WithPayload adds the payload to the post service conflict response
func (o *PostServiceConflict) WithPayload(payload *models.Error) *PostServiceConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service conflict response
func (o *PostServiceConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostServiceUnprocessableEntityCode is the HTTP code returned for type PostServiceUnprocessableEntity
const PostServiceUnprocessableEntityCode int = 422

/*
PostServiceUnprocessableEntity Unprocessable Content

swagger:response postServiceUnprocessableEntity
*/
type PostServiceUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceUnprocessableEntity creates PostServiceUnprocessableEntity with default headers values
func NewPostServiceUnprocessableEntity() *PostServiceUnprocessableEntity {

	return &PostServiceUnprocessableEntity{}
}

// WithPayload adds the payload to the post service unprocessable entity response
func (o *PostServiceUnprocessableEntity) WithPayload(payload *models.Error) *PostServiceUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service unprocessable entity response
func (o *PostServiceUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
