// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/archer/models"
)

// GetServiceServiceIDOKCode is the HTTP code returned for type GetServiceServiceIDOK
const GetServiceServiceIDOKCode int = 200

/*
GetServiceServiceIDOK Service

swagger:response getServiceServiceIdOK
*/
type GetServiceServiceIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Service `json:"body,omitempty"`
}

// NewGetServiceServiceIDOK creates GetServiceServiceIDOK with default headers values
func NewGetServiceServiceIDOK() *GetServiceServiceIDOK {

	return &GetServiceServiceIDOK{}
}

// WithPayload adds the payload to the get service service Id o k response
func (o *GetServiceServiceIDOK) WithPayload(payload *models.Service) *GetServiceServiceIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service service Id o k response
func (o *GetServiceServiceIDOK) SetPayload(payload *models.Service) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceServiceIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceServiceIDUnauthorizedCode is the HTTP code returned for type GetServiceServiceIDUnauthorized
const GetServiceServiceIDUnauthorizedCode int = 401

/*
GetServiceServiceIDUnauthorized Unauthorized

swagger:response getServiceServiceIdUnauthorized
*/
type GetServiceServiceIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServiceServiceIDUnauthorized creates GetServiceServiceIDUnauthorized with default headers values
func NewGetServiceServiceIDUnauthorized() *GetServiceServiceIDUnauthorized {

	return &GetServiceServiceIDUnauthorized{}
}

// WithPayload adds the payload to the get service service Id unauthorized response
func (o *GetServiceServiceIDUnauthorized) WithPayload(payload *models.Error) *GetServiceServiceIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service service Id unauthorized response
func (o *GetServiceServiceIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceServiceIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceServiceIDForbiddenCode is the HTTP code returned for type GetServiceServiceIDForbidden
const GetServiceServiceIDForbiddenCode int = 403

/*
GetServiceServiceIDForbidden Forbidden

swagger:response getServiceServiceIdForbidden
*/
type GetServiceServiceIDForbidden struct {
}

// NewGetServiceServiceIDForbidden creates GetServiceServiceIDForbidden with default headers values
func NewGetServiceServiceIDForbidden() *GetServiceServiceIDForbidden {

	return &GetServiceServiceIDForbidden{}
}

// WriteResponse to the client
func (o *GetServiceServiceIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetServiceServiceIDNotFoundCode is the HTTP code returned for type GetServiceServiceIDNotFound
const GetServiceServiceIDNotFoundCode int = 404

/*
GetServiceServiceIDNotFound Not Found

swagger:response getServiceServiceIdNotFound
*/
type GetServiceServiceIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServiceServiceIDNotFound creates GetServiceServiceIDNotFound with default headers values
func NewGetServiceServiceIDNotFound() *GetServiceServiceIDNotFound {

	return &GetServiceServiceIDNotFound{}
}

// WithPayload adds the payload to the get service service Id not found response
func (o *GetServiceServiceIDNotFound) WithPayload(payload *models.Error) *GetServiceServiceIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service service Id not found response
func (o *GetServiceServiceIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceServiceIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceServiceIDUnprocessableEntityCode is the HTTP code returned for type GetServiceServiceIDUnprocessableEntity
const GetServiceServiceIDUnprocessableEntityCode int = 422

/*
GetServiceServiceIDUnprocessableEntity Unprocessable Content

swagger:response getServiceServiceIdUnprocessableEntity
*/
type GetServiceServiceIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServiceServiceIDUnprocessableEntity creates GetServiceServiceIDUnprocessableEntity with default headers values
func NewGetServiceServiceIDUnprocessableEntity() *GetServiceServiceIDUnprocessableEntity {

	return &GetServiceServiceIDUnprocessableEntity{}
}

// WithPayload adds the payload to the get service service Id unprocessable entity response
func (o *GetServiceServiceIDUnprocessableEntity) WithPayload(payload *models.Error) *GetServiceServiceIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service service Id unprocessable entity response
func (o *GetServiceServiceIDUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceServiceIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
