// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/archer/models"
)

// PutServiceServiceIDAcceptEndpointsOKCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsOK
const PutServiceServiceIDAcceptEndpointsOKCode int = 200

/*
PutServiceServiceIDAcceptEndpointsOK Ok

swagger:response putServiceServiceIdAcceptEndpointsOK
*/
type PutServiceServiceIDAcceptEndpointsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.EndpointConsumer `json:"body,omitempty"`
}

// NewPutServiceServiceIDAcceptEndpointsOK creates PutServiceServiceIDAcceptEndpointsOK with default headers values
func NewPutServiceServiceIDAcceptEndpointsOK() *PutServiceServiceIDAcceptEndpointsOK {

	return &PutServiceServiceIDAcceptEndpointsOK{}
}

// WithPayload adds the payload to the put service service Id accept endpoints o k response
func (o *PutServiceServiceIDAcceptEndpointsOK) WithPayload(payload []*models.EndpointConsumer) *PutServiceServiceIDAcceptEndpointsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put service service Id accept endpoints o k response
func (o *PutServiceServiceIDAcceptEndpointsOK) SetPayload(payload []*models.EndpointConsumer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.EndpointConsumer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutServiceServiceIDAcceptEndpointsBadRequestCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsBadRequest
const PutServiceServiceIDAcceptEndpointsBadRequestCode int = 400

/*
PutServiceServiceIDAcceptEndpointsBadRequest Must declare at least one, endpoint_id(s) or project_id(s)

swagger:response putServiceServiceIdAcceptEndpointsBadRequest
*/
type PutServiceServiceIDAcceptEndpointsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutServiceServiceIDAcceptEndpointsBadRequest creates PutServiceServiceIDAcceptEndpointsBadRequest with default headers values
func NewPutServiceServiceIDAcceptEndpointsBadRequest() *PutServiceServiceIDAcceptEndpointsBadRequest {

	return &PutServiceServiceIDAcceptEndpointsBadRequest{}
}

// WithPayload adds the payload to the put service service Id accept endpoints bad request response
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) WithPayload(payload *models.Error) *PutServiceServiceIDAcceptEndpointsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put service service Id accept endpoints bad request response
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutServiceServiceIDAcceptEndpointsUnauthorizedCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsUnauthorized
const PutServiceServiceIDAcceptEndpointsUnauthorizedCode int = 401

/*
PutServiceServiceIDAcceptEndpointsUnauthorized Unauthorized

swagger:response putServiceServiceIdAcceptEndpointsUnauthorized
*/
type PutServiceServiceIDAcceptEndpointsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutServiceServiceIDAcceptEndpointsUnauthorized creates PutServiceServiceIDAcceptEndpointsUnauthorized with default headers values
func NewPutServiceServiceIDAcceptEndpointsUnauthorized() *PutServiceServiceIDAcceptEndpointsUnauthorized {

	return &PutServiceServiceIDAcceptEndpointsUnauthorized{}
}

// WithPayload adds the payload to the put service service Id accept endpoints unauthorized response
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) WithPayload(payload *models.Error) *PutServiceServiceIDAcceptEndpointsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put service service Id accept endpoints unauthorized response
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutServiceServiceIDAcceptEndpointsForbiddenCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsForbidden
const PutServiceServiceIDAcceptEndpointsForbiddenCode int = 403

/*
PutServiceServiceIDAcceptEndpointsForbidden Forbidden

swagger:response putServiceServiceIdAcceptEndpointsForbidden
*/
type PutServiceServiceIDAcceptEndpointsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutServiceServiceIDAcceptEndpointsForbidden creates PutServiceServiceIDAcceptEndpointsForbidden with default headers values
func NewPutServiceServiceIDAcceptEndpointsForbidden() *PutServiceServiceIDAcceptEndpointsForbidden {

	return &PutServiceServiceIDAcceptEndpointsForbidden{}
}

// WithPayload adds the payload to the put service service Id accept endpoints forbidden response
func (o *PutServiceServiceIDAcceptEndpointsForbidden) WithPayload(payload *models.Error) *PutServiceServiceIDAcceptEndpointsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put service service Id accept endpoints forbidden response
func (o *PutServiceServiceIDAcceptEndpointsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutServiceServiceIDAcceptEndpointsNotFoundCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsNotFound
const PutServiceServiceIDAcceptEndpointsNotFoundCode int = 404

/*
PutServiceServiceIDAcceptEndpointsNotFound Not Found

swagger:response putServiceServiceIdAcceptEndpointsNotFound
*/
type PutServiceServiceIDAcceptEndpointsNotFound struct {
}

// NewPutServiceServiceIDAcceptEndpointsNotFound creates PutServiceServiceIDAcceptEndpointsNotFound with default headers values
func NewPutServiceServiceIDAcceptEndpointsNotFound() *PutServiceServiceIDAcceptEndpointsNotFound {

	return &PutServiceServiceIDAcceptEndpointsNotFound{}
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PutServiceServiceIDAcceptEndpointsUnprocessableEntityCode is the HTTP code returned for type PutServiceServiceIDAcceptEndpointsUnprocessableEntity
const PutServiceServiceIDAcceptEndpointsUnprocessableEntityCode int = 422

/*
PutServiceServiceIDAcceptEndpointsUnprocessableEntity Unprocessable Content

swagger:response putServiceServiceIdAcceptEndpointsUnprocessableEntity
*/
type PutServiceServiceIDAcceptEndpointsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutServiceServiceIDAcceptEndpointsUnprocessableEntity creates PutServiceServiceIDAcceptEndpointsUnprocessableEntity with default headers values
func NewPutServiceServiceIDAcceptEndpointsUnprocessableEntity() *PutServiceServiceIDAcceptEndpointsUnprocessableEntity {

	return &PutServiceServiceIDAcceptEndpointsUnprocessableEntity{}
}

// WithPayload adds the payload to the put service service Id accept endpoints unprocessable entity response
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) WithPayload(payload *models.Error) *PutServiceServiceIDAcceptEndpointsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put service service Id accept endpoints unprocessable entity response
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutServiceServiceIDAcceptEndpointsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
