// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package rbac

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/archer/models"
)

// GetRbacPoliciesOKCode is the HTTP code returned for type GetRbacPoliciesOK
const GetRbacPoliciesOKCode int = 200

/*
GetRbacPoliciesOK A JSON array of rbac policies

swagger:response getRbacPoliciesOK
*/
type GetRbacPoliciesOK struct {

	/*
	  In: Body
	*/
	Payload *GetRbacPoliciesOKBody `json:"body,omitempty"`
}

// NewGetRbacPoliciesOK creates GetRbacPoliciesOK with default headers values
func NewGetRbacPoliciesOK() *GetRbacPoliciesOK {

	return &GetRbacPoliciesOK{}
}

// WithPayload adds the payload to the get rbac policies o k response
func (o *GetRbacPoliciesOK) WithPayload(payload *GetRbacPoliciesOKBody) *GetRbacPoliciesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rbac policies o k response
func (o *GetRbacPoliciesOK) SetPayload(payload *GetRbacPoliciesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRbacPoliciesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRbacPoliciesBadRequestCode is the HTTP code returned for type GetRbacPoliciesBadRequest
const GetRbacPoliciesBadRequestCode int = 400

/*
GetRbacPoliciesBadRequest Bad request

swagger:response getRbacPoliciesBadRequest
*/
type GetRbacPoliciesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRbacPoliciesBadRequest creates GetRbacPoliciesBadRequest with default headers values
func NewGetRbacPoliciesBadRequest() *GetRbacPoliciesBadRequest {

	return &GetRbacPoliciesBadRequest{}
}

// WithPayload adds the payload to the get rbac policies bad request response
func (o *GetRbacPoliciesBadRequest) WithPayload(payload *models.Error) *GetRbacPoliciesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rbac policies bad request response
func (o *GetRbacPoliciesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRbacPoliciesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRbacPoliciesUnauthorizedCode is the HTTP code returned for type GetRbacPoliciesUnauthorized
const GetRbacPoliciesUnauthorizedCode int = 401

/*
GetRbacPoliciesUnauthorized Unauthorized

swagger:response getRbacPoliciesUnauthorized
*/
type GetRbacPoliciesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRbacPoliciesUnauthorized creates GetRbacPoliciesUnauthorized with default headers values
func NewGetRbacPoliciesUnauthorized() *GetRbacPoliciesUnauthorized {

	return &GetRbacPoliciesUnauthorized{}
}

// WithPayload adds the payload to the get rbac policies unauthorized response
func (o *GetRbacPoliciesUnauthorized) WithPayload(payload *models.Error) *GetRbacPoliciesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rbac policies unauthorized response
func (o *GetRbacPoliciesUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRbacPoliciesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRbacPoliciesForbiddenCode is the HTTP code returned for type GetRbacPoliciesForbidden
const GetRbacPoliciesForbiddenCode int = 403

/*
GetRbacPoliciesForbidden Forbidden

swagger:response getRbacPoliciesForbidden
*/
type GetRbacPoliciesForbidden struct {
}

// NewGetRbacPoliciesForbidden creates GetRbacPoliciesForbidden with default headers values
func NewGetRbacPoliciesForbidden() *GetRbacPoliciesForbidden {

	return &GetRbacPoliciesForbidden{}
}

// WriteResponse to the client
func (o *GetRbacPoliciesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetRbacPoliciesUnprocessableEntityCode is the HTTP code returned for type GetRbacPoliciesUnprocessableEntity
const GetRbacPoliciesUnprocessableEntityCode int = 422

/*
GetRbacPoliciesUnprocessableEntity Unprocessable Content

swagger:response getRbacPoliciesUnprocessableEntity
*/
type GetRbacPoliciesUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRbacPoliciesUnprocessableEntity creates GetRbacPoliciesUnprocessableEntity with default headers values
func NewGetRbacPoliciesUnprocessableEntity() *GetRbacPoliciesUnprocessableEntity {

	return &GetRbacPoliciesUnprocessableEntity{}
}

// WithPayload adds the payload to the get rbac policies unprocessable entity response
func (o *GetRbacPoliciesUnprocessableEntity) WithPayload(payload *models.Error) *GetRbacPoliciesUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rbac policies unprocessable entity response
func (o *GetRbacPoliciesUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRbacPoliciesUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
